{"remainingRequest":"/home/cabox/workspace/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/home/cabox/workspace/src/components/home/Customers.vue?vue&type=style&index=0&id=796ed295&lang=scss","dependencies":[{"path":"/home/cabox/workspace/src/components/home/Customers.vue","mtime":1675386928000},{"path":"/home/cabox/workspace/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/cabox/workspace/node_modules/vue-loader-v16/dist/stylePostLoader.js","mtime":499162500000},{"path":"/home/cabox/workspace/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/cabox/workspace/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/cabox/workspace/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/cabox/workspace/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CkBpbXBvcnQgIkAvYXNzZXRzL3N0eWxlcy9jdXN0b20uc2NzcyI7CiNjbGllbnRlcyB7CiAgZm9udC1zaXplOiAkZGVmYXVsdEZvbnQ7CiAgaDMgewogICAgY29sb3I6ICRibHVlSW5pdGlhbDsKICB9CiAgaDMsCiAgaDUgewogICAgZGlzcGxheTogaW5saW5lLWJsb2NrOwogICAgbWFyZ2luOiAwcmVtOwogIH0KICBoMyB7CiAgICBtYXJnaW4tbGVmdDogMXJlbTsKICB9Cn0K"},{"version":3,"sources":["/home/cabox/workspace/src/components/home/Customers.vue"],"names":[],"mappings":";AAgGA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACvB,CAAC,EAAE;IACD,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACrB;EACA,CAAC,CAAC;EACF,CAAC,EAAE;IACD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EACd;EACA,CAAC,EAAE;IACD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EACnB;AACF","file":"/home/cabox/workspace/src/components/home/Customers.vue","sourceRoot":"","sourcesContent":["<template>\n  <div class=\"container\" id=\"clientes\">\n    <div class=\"section\">\n      <div class=\"row\">\n        <div class=\"col s12 m4\">\n          <div class=\"icon-block\">\n            <h5>+</h5>\n            <h3 class=\"center\" id=\"clientsTotal\"></h3>\n            <p class=\"light\">Clientes Satisfechos</p>\n          </div>\n        </div>\n        <div class=\"col s12 m4\">\n          <div class=\"icon-block\">\n            <h5>+</h5>\n            <h3 class=\"center\" id=\"productsTotal\"></h3>\n            <p class=\"light\">Productos a tu alcance</p>\n          </div>\n        </div>\n        <div class=\"col s12 m4\">\n          <div class=\"icon-block\">\n            <h5>+</h5>\n            <h3 class=\"center\" id=\"experienceTotal\"></h3>\n            <p class=\"light\">AÃ±os de Experiencia</p>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport inView from \"in-view\";\n\nexport default {\n  name: \"Customers\",\n\n  methods: {\n    async setCounters() {\n      // set counter for total customers\n      let clients = document.getElementById(\"clientsTotal\");\n      let clientsTotal = 840;\n      let i = 0;\n      let seconds = 100;\n      new Promise((resolve) => {\n        let counters = setInterval(() => {\n          i += 10;\n          if (i > clientsTotal) {\n            clearInterval(counters);\n            resolve();\n            return;\n          }\n          clients.innerHTML = i;\n        }, seconds);\n      });\n      // set counter for total products\n      let products = document.getElementById(\"productsTotal\");\n      let productsTotal = 200000;\n      let j = 0;\n      seconds = 0.1;\n      new Promise((resolve) => {\n        let counters = setInterval(() => {\n          j += 100;\n          if (j > productsTotal) {\n            clearInterval(counters);\n            resolve();\n            return;\n          }\n          products.innerHTML = j;\n        }, seconds);\n      });\n      // set counter for total experience\n      let experience = document.getElementById(\"experienceTotal\");\n      let experienceTotal = 11;\n      let k = 0;\n      seconds = 750;\n      new Promise((resolve) => {\n        let counters = setInterval(() => {\n          k++;\n          if (k > experienceTotal) {\n            clearInterval(counters);\n            resolve();\n            return;\n          }\n          experience.innerHTML = k;\n        }, seconds);\n      });\n    },\n  },\n\n  mounted() {\n    inView(\"#clientes\").on(\"enter\", () => this.setCounters());\n  },\n};\n</script>\n\n<style lang=\"scss\">\n@import \"@/assets/styles/custom.scss\";\n#clientes {\n  font-size: $defaultFont;\n  h3 {\n    color: $blueInitial;\n  }\n  h3,\n  h5 {\n    display: inline-block;\n    margin: 0rem;\n  }\n  h3 {\n    margin-left: 1rem;\n  }\n}\n</style>\n"]}]}