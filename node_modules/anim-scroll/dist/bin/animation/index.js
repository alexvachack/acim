"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _engine = _interopRequireDefault(require("./engine"));

var _promise = _interopRequireDefault(require("../../libs/promise"));

var _getTape2 = _interopRequireDefault(require("./getTape"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = (direction, wrapper, options, activeSlide) => {
  try {
    var _getTape = (0, _getTape2.default)(direction, wrapper, activeSlide, options.dotIndex, options.infinite),
        slideTape = _getTape.slideTape,
        navTape = _getTape.navTape,
        tapeD = _getTape.tapeD;

    if (slideTape.now === slideTape.next) return (0, _promise.default)(0);
    (0, _engine.default)(slideTape, tapeD === 'next' ? options.slideAnimation : options.slideAnimationRev);

    if (wrapper.navBar) {
      (0, _engine.default)(navTape, {
        active: [options.navBarStyle.dots.usual],
        next: [options.navBarStyle.dots.active]
      });
    }

    if (wrapper.arrows) {
      (0, _engine.default)({
        now: {
          style: {}
        },
        next: wrapper.arrows[`arrow${tapeD === 'next' ? 'Next' : 'Prev'}`].firstChild
      }, {
        active: [{
          trms: 0
        }],
        next: [options.arrowStyle.arrows.active, options.arrowStyle.arrows.usual]
      });
    }
  } catch (err) {
    console.warn('Animation error.');
    console.error(err);
  }

  return (0, _promise.default)(options.animDuration);
};

exports.default = _default;